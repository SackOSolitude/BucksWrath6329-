// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc.team6329.robot.commands.autonomous;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc.team6329.robot.Robot;

/**
 *
 */
public class TurnToAngle extends Command {

	private double rotationSpeed;
	private double goalDegrees;
	
    public TurnToAngle(double rotationSpeed, double goalDegrees) {
        requires(Robot.DriveTrainSubsystem);
        
        this.rotationSpeed = rotationSpeed;
        this.goalDegrees = goalDegrees;
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	Robot.gyro.reset();
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	
    	if (goalDegrees >= 0) {
    		Robot.DriveTrainSubsystem.autoDrive(rotationSpeed, -rotationSpeed);
    	}
    	
    	else {
    		Robot.DriveTrainSubsystem.autoDrive(-rotationSpeed, rotationSpeed);
}
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
    	
    	if (goalDegrees >= 0) {
    		return (Robot.DriveTrainSubsystem.getAngle() >= goalDegrees);
    	}
    	
    	else {
    		return (Robot.DriveTrainSubsystem.getAngle() <= goalDegrees);
}
    }

    // Called once after isFinished returns true
    protected void end() {
    	Robot.DriveTrainSubsystem.stop();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	end();
    }
}
